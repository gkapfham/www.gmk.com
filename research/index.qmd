---
title: "Research"
toc: true
page-layout: full
title-block-style: default
title-block-banner: false
bibliography: ../bibliography/bibtex/bibliography_kapfhammer.bib
---

```{python}
from rich.console import Console

console = Console()
console.print(
    f":rocket: Have fun exploring my research in fields like testing and debugging!"
)
```

## Overview

<span class="gist">As an experimental computer scientist, the goal of my
research is to design, implement, and rigorously evaluate techniques and tools
that support the creation of useful, dependable, and efficient software.</span>
My research addresses the challenges in fields such as software engineering,
software testing, and computer systems. I conduct this research with
undergraduates at [Allegheny College](http://www.allegheny.edu), graduate
students and professors at several universities, and colleagues in industry.
Keep reading for more details!

## Details

My research is empirical because it involves the application of the scientific
method to formulate problem statements, carry out experiments, take
observations, statistically analyze and visualize the data sets, and draw
conclusions based on the results. Each project focuses on the development and
evaluation of [software](/software/) artifacts that can be used in both
empirical studies and real-world practice by undergraduate and graduate
students, software engineers, and computer scientists in both academia and
industry. In addition to supporting my professional [service](/service/), my
research results in award-winning and frequently cited research
[papers](/research/papers/), oft-complimented
[presentations](/research/presentations/), and useful free and open-source
[software](/software/). <span class="gist">My research focuses on software
    engineering and software testing, examples of which are described in these
    summaries that reference key papers.</span>

### Flaky Tests

<div id="FlakyTests">

<span class="gist">Since flaky tests can pass or fail without any changes to the
    test code or the code under test, they are an unreliable indicator of
    software correctness and a major problem for many software
    developers.</span> To address this challenge, my collaborators and I have
developed an automated method that uses machine learning to predict which tests
are most likely to be flaky
[@Parry2022a] [{{< iconify fa6-solid book-open >}}](/research/papers/parry2022a/index.qmd).
Along with proposing a methodology for automatically determining which tests
have latent flakiness
[@Parry2020] [{{< iconify fa6-solid book-open >}}](/research/papers/parry2020/index.qmd),
my colleagues and I also published a survey of the literature relevant to flaky
test research
[@Parry2022] [{{< iconify fa6-solid book-open >}}](/research/papers/parry2022/index.qmd),
and a multi-source investigation into how developers experience the impacts and
causes of flaky tests
[@Parry2022b] [{{< iconify fa6-solid book-open >}}](/research/papers/parry2022b/index.qmd).

</div>

### Database Testing

<div id="DatabaseTesting">

Given the importance of verifying that a database application operates correctly, my PhD dissertation
[@Kapfhammer2007d] [{{< iconify fa6-solid book-open >}}](/research/papers/kapfhammer2007d/index.qmd)
presented an approach for testing this type of
software; a notable paper derived from my dissertation is
[@Kapfhammer2003] [{{< iconify fa6-solid book-open >}}](/research/papers/kapfhammer2003/index.qmd).
Since the relational schema preserves the correctness of the database's state,
my research has also focused on testing this complex artifact, with
[@McMinn2015] [{{< iconify fa6-solid book-open >}}](/research/papers/mcminn2015/index.qmd)
and
[@McMinn2019] [{{< iconify fa6-solid book-open >}}](/research/papers/mcminn2019/index.qmd)
being examples of papers.
Recent papers such as
[@Alsharif2020] [{{< iconify fa6-solid book-open >}}](/research/papers/alsharif2020/index.qmd)
and
[@Alsharif2020a] [{{< iconify fa6-solid book-open >}}](/research/papers/alsharif2020a/index.qmd)
present techniques for improving the efficiency and effectiveness of regression testing for
relational database schemas.

</div>

### Web Testing

<div id="WebTesting">

In response to the prevalence and complexity of mobile-ready web sites, my
research has developed automated tools for checking the pages in these sites.
Some examples of papers describing methods for automatically detecting defects
in web pages include {% include_cached _popovers/paper_reference.html
cite="Walsh2017" %} and {% include_cached _popovers/paper_reference.html
cite="Walsh2017a" trailing="." %} The automated approach introduced in {%
include_cached _popovers/paper_reference.html cite="Althomali2019" %} can
visually confirm and classify the reported responsive layout failures in a web
page. The method described in {% include_cached _popovers/paper_reference.html
cite="Walsh2020" %} can automatically identify potential regressions from the
correct responsive layout of a web page. Finally, recent work introduced a
method to automatically repair a layout failure in a responsive web page {%
include_cached _popovers/paper_reference.html cite="Althomali2022" trailing="."
%}

</div>

### Mutation Testing

<div id="MutationTesting">

Given the challenges associated with accurately judging the quality of a test
suite, my research has designed efficient and useful ways to perform test
assessment through mutation analysis. Presenting and evaluating automated
techniques that efficiently insert synthetic faults into both real-world Java
programs and relational database schemas, some examples of papers include {%
include _popovers/paper_reference.html cite="Just2012b" trailing="," %} {%
include_cached _popovers/paper_reference.html cite="Wright2014" trailing="," %}
and {% include_cached _popovers/paper_reference.html cite="McMinn2019"
trailing="." %}

</div>

### Regression Testing

<div id="RegressionTesting">

Since software is often incrementally developed, my
research on regression testing has created research automated ways to
efficiently and effectively run test suites for complex programs. Some examples
of papers that present and evaluate regression testing techniques include {%
include _popovers/paper_reference.html cite="Walcott2006" trailing="," %} {%
include_cached _popovers/paper_reference.html cite="Lin2014" trailing="," %} and
{% include_cached _popovers/paper_reference.html cite="Lin2017" trailing="." %}
Leading the way in the realistic assessment of regression testing, papers such
as {% include _popovers/paper_reference.html cite="Paterson2018" %} and {%
include _popovers/paper_reference.html cite="Paterson2019" %} show how to
conduct rigorous experiments with real program faults.

</div>

### Search-Based Testing

<div id="SearchBasedTesting">

Using a fitness function as a guide to a suitable solution, search-based methods
have shown promise in supporting many software engineering tasks. My work has
focused on creating and maintaining frameworks that support the development of
search-based tools, with {% include_cached _popovers/paper_reference.html
cite="McMinn2016b" %} being one example. Other papers such as {% include_cached
_popovers/paper_reference.html cite="Conrad2010a" %} and {% include_cached
_popovers/paper_reference.html cite="Kukunas2010a" %} describe search-based
solutions to key software engineering challenges. Recent papers like {%
include_cached _popovers/paper_reference.html cite="Alsharif2019" %} present
ways to involve humans when studying the usefulness of tests that were
automatically generated by search-based techniques.

</div>

### Performance Evaluation

<div id="PerformanceEvaluation">

Given the importance of equipping software engineers with the insights and tools
they need to create efficient software, my work has concentrated on developing
and studying tools that automatically assess program performance. Focusing on
the empirical evaluation of real-world software components like databases,
papers in this area include {% include_cached _popovers/paper_reference.html
cite="Jones2011" trailing="," %} {% include_cached
_popovers/paper_reference.html cite="Burdette2012" trailing="," %} and {%
include_cached _popovers/paper_reference.html cite="Kinneer2015" trailing="." %}
Papers such as {% include_cached _popovers/paper_reference.html
cite="Kotelyanskii2014a" %} highlight how my research has also characterized the
influence that the parameters of a search-based algorithm have on its efficiency
and effectiveness.

</div>

### Research Methods

<div id="ResearchMethods">

<b>Research Methods:</b> My surveys of software testing techniques provide a
starting point for people exploring this field, with {% include_cached
_popovers/paper_reference.html cite="Kapfhammer2004" %} and {% include_cached
_popovers/paper_reference.html cite="Kapfhammer2010" %} being examples of such
articles. Papers like {% include_cached _popovers/paper_reference.html
cite="Kapfhammer2016" %} and {% include_cached _popovers/paper_reference.html
cite="McMinn2016" %} show how I have articulated a research agenda for the field
of software engineering that stresses, for instance, the need for well-tested
statistical methods. I have also written papers, like {% include_cached
_popovers/paper_reference.html cite="Alsharif2018a" %} and {% include_cached
_popovers/paper_reference.html cite="Alsharif2018b" trailing="," %} that explain
how to replicate my research.

</div>

{{< include /_gist.qmd >}}

::: {.callout-note appearance="simple"}

## Establish Connections

Do you work on these topics and are you interested in collaborating with me on a
project in the fields of software engineering and software testing? If so, then
please [contact](/contact/) me soon!

:::
